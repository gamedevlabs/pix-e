# Generated by Django 5.2 on 2025-07-30 18:03

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("moodboards", "0003_convert_comment_permissions"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveIndex(
            model_name="moodboard",
            name="moodboards__categor_4a2528_idx",
        ),
        migrations.RemoveIndex(
            model_name="moodboard",
            name="moodboards__is_publ_64d432_idx",
        ),
        migrations.RemoveIndex(
            model_name="moodboardcomment",
            name="moodboards__user_id_f497c6_idx",
        ),
        migrations.RemoveIndex(
            model_name="moodboardimage",
            name="moodboards__source_51073f_idx",
        ),
        migrations.RemoveField(
            model_name="moodboard",
            name="is_active",
        ),
        migrations.AddField(
            model_name="moodboard",
            name="last_accessed",
            field=models.DateTimeField(
                default=django.utils.timezone.now,
                help_text="Last time this moodboard was accessed",
            ),
        ),
        migrations.AddField(
            model_name="moodboard",
            name="like_count",
            field=models.PositiveIntegerField(
                default=0, help_text="Number of likes received"
            ),
        ),
        migrations.AddField(
            model_name="moodboard",
            name="public_permission",
            field=models.CharField(
                choices=[("view", "View Only"), ("edit", "Edit Access")],
                default="view",
                help_text="Permission level for public access",
                max_length=10,
            ),
        ),
        migrations.AddField(
            model_name="moodboard",
            name="view_count",
            field=models.PositiveIntegerField(
                default=0, help_text="Number of times viewed"
            ),
        ),
        migrations.AddField(
            model_name="moodboardcomment",
            name="hidden_at",
            field=models.DateTimeField(
                blank=True, help_text="When comment was hidden", null=True
            ),
        ),
        migrations.AddField(
            model_name="moodboardcomment",
            name="hidden_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who hid this comment",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="hidden_comments",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="moodboardcomment",
            name="is_hidden",
            field=models.BooleanField(
                default=False, help_text="Hide comment (for moderation)"
            ),
        ),
        migrations.AddField(
            model_name="moodboardimage",
            name="dominant_colors",
            field=models.JSONField(
                blank=True,
                help_text="Dominant colors extracted from image as hex values",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="moodboardimage",
            name="format",
            field=models.CharField(
                blank=True, help_text="Image format (PNG, JPG, etc.)", max_length=10
            ),
        ),
        migrations.AddField(
            model_name="moodboardimage",
            name="generation_status",
            field=models.CharField(
                choices=[
                    ("pending", "Generation Pending"),
                    ("processing", "Processing"),
                    ("completed", "Completed"),
                    ("failed", "Failed"),
                ],
                default="completed",
                help_text="Status of AI generation process",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="moodboardimage",
            name="generation_time",
            field=models.FloatField(
                blank=True,
                help_text="Time taken to generate image in seconds",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="moodboardimage",
            name="style_tags",
            field=models.JSONField(
                blank=True,
                help_text="Automatically detected style characteristics",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="moodboardshare",
            name="custom_message",
            field=models.TextField(
                blank=True,
                help_text="Custom message sent with the share invitation",
                max_length=500,
            ),
        ),
        migrations.AddField(
            model_name="moodboardshare",
            name="expires_at",
            field=models.DateTimeField(
                blank=True, help_text="Optional expiration time for access", null=True
            ),
        ),
        migrations.AlterField(
            model_name="moodboard",
            name="category",
            field=models.CharField(
                choices=[
                    ("gaming", "Gaming"),
                    ("ui_ux", "UI/UX Design"),
                    ("concept_art", "Concept Art"),
                    ("character_design", "Character Design"),
                    ("environment", "Environment Design"),
                    ("product_design", "Product Design"),
                    ("branding", "Branding & Identity"),
                    ("architecture", "Architecture"),
                    ("fashion", "Fashion Design"),
                    ("other", "Other"),
                ],
                db_index=True,
                default="other",
                help_text="Moodboard category for organization",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="moodboard",
            name="color_palette",
            field=models.JSONField(
                blank=True,
                help_text="Saved color palette as JSON array of hex colors",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="moodboard",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name="moodboard",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="Brief description of the moodboard concept (max 2000 chars)",
                max_length=2000,
            ),
        ),
        migrations.AlterField(
            model_name="moodboard",
            name="is_public",
            field=models.BooleanField(
                db_index=True,
                default=False,
                help_text="Make this moodboard publicly viewable",
            ),
        ),
        migrations.AlterField(
            model_name="moodboard",
            name="shared_with",
            field=models.ManyToManyField(
                blank=True,
                help_text="Users this moodboard is explicitly shared with",
                related_name="shared_moodboards",
                through="moodboards.MoodboardShare",
                through_fields=("moodboard", "user"),
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="moodboard",
            name="status",
            field=models.CharField(
                choices=[
                    ("draft", "Draft"),
                    ("in_progress", "In Progress"),
                    ("completed", "Completed"),
                    ("archived", "Archived"),
                ],
                db_index=True,
                default="draft",
                help_text="Current status of the moodboard",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="moodboard",
            name="tags",
            field=models.CharField(
                blank=True,
                help_text="Comma-separated tags for searching and organization",
                max_length=500,
            ),
        ),
        migrations.AlterField(
            model_name="moodboard",
            name="title",
            field=models.CharField(
                default="Untitled Moodboard",
                help_text="Moodboard title (1-255 characters)",
                max_length=255,
                validators=[
                    django.core.validators.MinLengthValidator(1),
                    django.core.validators.MaxLengthValidator(255),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="moodboard",
            name="updated_at",
            field=models.DateTimeField(auto_now=True, db_index=True),
        ),
        migrations.AlterField(
            model_name="moodboard",
            name="user",
            field=models.ForeignKey(
                help_text="Owner of the moodboard",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="moodboards",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="moodboardcomment",
            name="content",
            field=models.TextField(
                help_text="Comment content (max 2000 characters)", max_length=2000
            ),
        ),
        migrations.AlterField(
            model_name="moodboardcomment",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name="moodboardcomment",
            name="image",
            field=models.ForeignKey(
                blank=True,
                help_text="Specific image this comment relates to (optional)",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                to="moodboards.moodboardimage",
            ),
        ),
        migrations.AlterField(
            model_name="moodboardcomment",
            name="moodboard",
            field=models.ForeignKey(
                help_text="Moodboard this comment belongs to",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                to="moodboards.moodboard",
            ),
        ),
        migrations.AlterField(
            model_name="moodboardcomment",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                help_text="Parent comment for threading replies",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="replies",
                to="moodboards.moodboardcomment",
            ),
        ),
        migrations.AlterField(
            model_name="moodboardcomment",
            name="user",
            field=models.ForeignKey(
                help_text="User who wrote the comment",
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="moodboardimage",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name="moodboardimage",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="Description or notes about the image",
                max_length=1000,
            ),
        ),
        migrations.AlterField(
            model_name="moodboardimage",
            name="generation_params",
            field=models.JSONField(
                blank=True,
                help_text="Parameters used for AI generation (model, seed, etc.)",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="moodboardimage",
            name="height",
            field=models.PositiveIntegerField(
                blank=True, help_text="Image height in pixels", null=True
            ),
        ),
        migrations.AlterField(
            model_name="moodboardimage",
            name="image_url",
            field=models.CharField(
                help_text="URL or path to the full-size image", max_length=1000
            ),
        ),
        migrations.AlterField(
            model_name="moodboardimage",
            name="is_selected",
            field=models.BooleanField(
                db_index=True,
                default=False,
                help_text="Whether image is selected for the final moodboard",
            ),
        ),
        migrations.AlterField(
            model_name="moodboardimage",
            name="moodboard",
            field=models.ForeignKey(
                help_text="Parent moodboard",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="images",
                to="moodboards.moodboard",
            ),
        ),
        migrations.AlterField(
            model_name="moodboardimage",
            name="order_index",
            field=models.PositiveIntegerField(
                default=0, help_text="Order position in the moodboard"
            ),
        ),
        migrations.AlterField(
            model_name="moodboardimage",
            name="original_filename",
            field=models.CharField(
                blank=True, help_text="Original filename if uploaded", max_length=255
            ),
        ),
        migrations.AlterField(
            model_name="moodboardimage",
            name="prompt",
            field=models.TextField(
                blank=True, help_text="AI prompt used to generate this image"
            ),
        ),
        migrations.AlterField(
            model_name="moodboardimage",
            name="source",
            field=models.CharField(
                choices=[
                    ("ai_generated", "AI Generated"),
                    ("uploaded", "User Uploaded"),
                    ("url_import", "Imported from URL"),
                    ("stock", "Stock Image"),
                    ("template", "Template Image"),
                ],
                db_index=True,
                default="ai_generated",
                help_text="Source/method of image creation",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="moodboardimage",
            name="tags",
            field=models.CharField(
                blank=True,
                help_text="Comma-separated tags for search and organization",
                max_length=500,
            ),
        ),
        migrations.AlterField(
            model_name="moodboardimage",
            name="thumbnail_url",
            field=models.CharField(
                blank=True,
                help_text="URL or path to optimized thumbnail",
                max_length=1000,
            ),
        ),
        migrations.AlterField(
            model_name="moodboardimage",
            name="title",
            field=models.CharField(
                blank=True, help_text="Custom title for the image", max_length=255
            ),
        ),
        migrations.AlterField(
            model_name="moodboardimage",
            name="width",
            field=models.PositiveIntegerField(
                blank=True, help_text="Image width in pixels", null=True
            ),
        ),
        migrations.AlterField(
            model_name="moodboardshare",
            name="moodboard",
            field=models.ForeignKey(
                help_text="The moodboard being shared",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="shares",
                to="moodboards.moodboard",
            ),
        ),
        migrations.AlterField(
            model_name="moodboardshare",
            name="permission",
            field=models.CharField(
                choices=[
                    ("view", "View Only"),
                    ("edit", "View and Edit"),
                    ("admin", "Full Access"),
                ],
                default="view",
                help_text="Level of access granted",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="moodboardshare",
            name="shared_at",
            field=models.DateTimeField(
                auto_now_add=True, help_text="When access was granted"
            ),
        ),
        migrations.AlterField(
            model_name="moodboardshare",
            name="shared_by",
            field=models.ForeignKey(
                help_text="User who granted the access",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="shares_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="moodboardshare",
            name="user",
            field=models.ForeignKey(
                help_text="User receiving access",
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="moodboardtemplate",
            name="category",
            field=models.CharField(
                choices=[
                    ("gaming", "Gaming"),
                    ("ui_ux", "UI/UX Design"),
                    ("concept_art", "Concept Art"),
                    ("character_design", "Character Design"),
                    ("environment", "Environment Design"),
                    ("product_design", "Product Design"),
                    ("branding", "Branding & Identity"),
                    ("architecture", "Architecture"),
                    ("fashion", "Fashion Design"),
                    ("other", "Other"),
                ],
                default="other",
                max_length=20,
            ),
        ),
        migrations.AddIndex(
            model_name="moodboard",
            index=models.Index(
                fields=["category", "is_public"], name="moodboards__categor_4d9410_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="moodboard",
            index=models.Index(
                fields=["is_public", "status"], name="moodboards__is_publ_1bf9fb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="moodboard",
            index=models.Index(
                fields=["updated_at"], name="moodboards__updated_4f2e4c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="moodboardcomment",
            index=models.Index(
                fields=["image", "created_at"], name="moodboards__image_i_6355e1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="moodboardcomment",
            index=models.Index(
                fields=["parent", "created_at"], name="moodboards__parent__ee4a89_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="moodboardimage",
            index=models.Index(
                fields=["source", "generation_status"],
                name="moodboards__source_f33ab7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="moodboardimage",
            index=models.Index(
                fields=["moodboard", "order_index"],
                name="moodboards__moodboa_93afb5_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="moodboardshare",
            index=models.Index(
                fields=["user", "shared_at"], name="moodboards__user_id_c2c0f3_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="moodboardimage",
            constraint=models.CheckConstraint(
                condition=models.Q(("order_index__gte", 0)),
                name="image_order_index_positive",
            ),
        ),
        migrations.AddConstraint(
            model_name="moodboardshare",
            constraint=models.CheckConstraint(
                condition=models.Q(("user", models.F("shared_by")), _negated=True),
                name="cannot_share_with_self",
            ),
        ),
    ]
