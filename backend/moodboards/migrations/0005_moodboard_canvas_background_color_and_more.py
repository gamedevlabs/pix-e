# Generated by Django 5.2 on 2025-09-01 22:38

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("moodboards", "0004_production_models_simple"),
    ]

    operations = [
        migrations.AddField(
            model_name="moodboard",
            name="canvas_background_color",
            field=models.CharField(
                default="#FFFFFF",
                help_text="Canvas background color (hex)",
                max_length=7,
            ),
        ),
        migrations.AddField(
            model_name="moodboard",
            name="canvas_background_image",
            field=models.CharField(
                blank=True, help_text="Optional background image URL", max_length=1000
            ),
        ),
        migrations.AddField(
            model_name="moodboard",
            name="canvas_height",
            field=models.PositiveIntegerField(
                default=1080, help_text="Canvas height in pixels"
            ),
        ),
        migrations.AddField(
            model_name="moodboard",
            name="canvas_width",
            field=models.PositiveIntegerField(
                default=1920, help_text="Canvas width in pixels"
            ),
        ),
        migrations.AddField(
            model_name="moodboard",
            name="grid_enabled",
            field=models.BooleanField(
                default=True, help_text="Show grid lines for alignment"
            ),
        ),
        migrations.AddField(
            model_name="moodboard",
            name="grid_size",
            field=models.PositiveIntegerField(
                default=20, help_text="Grid size in pixels"
            ),
        ),
        migrations.AddField(
            model_name="moodboard",
            name="snap_to_grid",
            field=models.BooleanField(
                default=True, help_text="Snap elements to grid when dragging"
            ),
        ),
        migrations.AddField(
            model_name="moodboardimage",
            name="canvas_height",
            field=models.FloatField(
                default=200, help_text="Height of image on canvas (pixels)"
            ),
        ),
        migrations.AddField(
            model_name="moodboardimage",
            name="canvas_width",
            field=models.FloatField(
                default=200, help_text="Width of image on canvas (pixels)"
            ),
        ),
        migrations.AddField(
            model_name="moodboardimage",
            name="opacity",
            field=models.FloatField(
                default=1.0, help_text="Opacity level (0.0 to 1.0)"
            ),
        ),
        migrations.AddField(
            model_name="moodboardimage",
            name="rotation",
            field=models.FloatField(default=0, help_text="Rotation angle in degrees"),
        ),
        migrations.AddField(
            model_name="moodboardimage",
            name="x_position",
            field=models.FloatField(
                default=0,
                help_text="X coordinate on canvas (percentage of canvas width)",
            ),
        ),
        migrations.AddField(
            model_name="moodboardimage",
            name="y_position",
            field=models.FloatField(
                default=0,
                help_text="Y coordinate on canvas (percentage of canvas height)",
            ),
        ),
        migrations.AddField(
            model_name="moodboardimage",
            name="z_index",
            field=models.PositiveIntegerField(
                default=1, help_text="Layer order (higher values appear on top)"
            ),
        ),
        migrations.CreateModel(
            name="MoodboardTextElement",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "content",
                    models.TextField(help_text="Text content", max_length=1000),
                ),
                (
                    "x_position",
                    models.FloatField(
                        default=0,
                        help_text="X coordinate on canvas (percentage of canvas width)",
                    ),
                ),
                (
                    "y_position",
                    models.FloatField(
                        default=0,
                        help_text="Y coordinate on canvas (percentage of canvas height)",
                    ),
                ),
                (
                    "width",
                    models.FloatField(
                        default=200, help_text="Width of text box (pixels)"
                    ),
                ),
                (
                    "height",
                    models.FloatField(
                        default=50, help_text="Height of text box (pixels)"
                    ),
                ),
                (
                    "rotation",
                    models.FloatField(default=0, help_text="Rotation angle in degrees"),
                ),
                (
                    "z_index",
                    models.PositiveIntegerField(
                        default=1, help_text="Layer order (higher values appear on top)"
                    ),
                ),
                (
                    "opacity",
                    models.FloatField(
                        default=1.0, help_text="Opacity level (0.0 to 1.0)"
                    ),
                ),
                (
                    "font_family",
                    models.CharField(
                        choices=[
                            ("Inter", "Inter"),
                            ("Helvetica", "Helvetica"),
                            ("Arial", "Arial"),
                            ("Times New Roman", "Times New Roman"),
                            ("Georgia", "Georgia"),
                            ("Courier New", "Courier New"),
                            ("Roboto", "Roboto"),
                            ("Open Sans", "Open Sans"),
                            ("Lato", "Lato"),
                            ("Montserrat", "Montserrat"),
                        ],
                        default="Inter",
                        help_text="Font family",
                        max_length=50,
                    ),
                ),
                (
                    "font_size",
                    models.PositiveIntegerField(
                        default=16, help_text="Font size in pixels"
                    ),
                ),
                (
                    "font_weight",
                    models.PositiveIntegerField(
                        choices=[
                            (100, "Thin"),
                            (200, "Extra Light"),
                            (300, "Light"),
                            (400, "Regular"),
                            (500, "Medium"),
                            (600, "Semi Bold"),
                            (700, "Bold"),
                            (800, "Extra Bold"),
                            (900, "Black"),
                        ],
                        default=400,
                        help_text="Font weight",
                    ),
                ),
                (
                    "text_align",
                    models.CharField(
                        choices=[
                            ("left", "Left"),
                            ("center", "Center"),
                            ("right", "Right"),
                            ("justify", "Justify"),
                        ],
                        default="left",
                        help_text="Text alignment",
                        max_length=10,
                    ),
                ),
                (
                    "line_height",
                    models.FloatField(default=1.4, help_text="Line height multiplier"),
                ),
                (
                    "letter_spacing",
                    models.FloatField(default=0, help_text="Letter spacing in pixels"),
                ),
                (
                    "text_color",
                    models.CharField(
                        default="#000000", help_text="Text color (hex)", max_length=7
                    ),
                ),
                (
                    "background_color",
                    models.CharField(
                        blank=True,
                        help_text="Background color (hex, optional)",
                        max_length=7,
                    ),
                ),
                (
                    "border_color",
                    models.CharField(
                        blank=True,
                        help_text="Border color (hex, optional)",
                        max_length=7,
                    ),
                ),
                (
                    "border_width",
                    models.PositiveIntegerField(
                        default=0, help_text="Border width in pixels"
                    ),
                ),
                (
                    "is_selected",
                    models.BooleanField(
                        default=False,
                        help_text="Whether text element is selected for the final moodboard",
                    ),
                ),
                (
                    "order_index",
                    models.PositiveIntegerField(
                        default=0, help_text="Order position in the moodboard"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "moodboard",
                    models.ForeignKey(
                        help_text="Parent moodboard",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="text_elements",
                        to="moodboards.moodboard",
                    ),
                ),
            ],
            options={
                "ordering": ["order_index", "created_at"],
                "indexes": [
                    models.Index(
                        fields=["moodboard", "is_selected"],
                        name="moodboards__moodboa_49f68f_idx",
                    ),
                    models.Index(
                        fields=["moodboard", "z_index"],
                        name="moodboards__moodboa_e8151a_idx",
                    ),
                ],
            },
        ),
    ]
